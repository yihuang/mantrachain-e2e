name: E2E Nix Tests Connect
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy environment (testnet or canary)'
        required: true
        default: 'canary'
        type: choice
        options:
          - testnet
          - canary

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  integration_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 240
    strategy:
      matrix:
        tests: [connect]
    env:
      TESTS_TO_RUN: ${{ matrix.tests }}
    environment:
      name: ${{ github.event.inputs.environment }}
    steps:
      - name: Create more disk space
        run: sudo rm -rf /usr/share/dotnet && sudo rm -rf /opt/ghc && sudo rm -rf "/usr/local/share/boost" && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 1
      - uses: cachix/install-nix-action@6a9a9e84a173d90b3ffb42c5ddaf9ea033fad011 # v23
        with:
          nix_path: nixpkgs=channel:nixos-25.05
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.NIX_GH_TOKEN }}
      - uses: cachix/cachix-action@6a9a34cdd93d0ae4b4b59fd678660efb08109f2f # v12
        with:
          name: mantrachain-e2e
          extraPullNames: dapp
          # github don't pass secrets for pull request from fork repos,
          # in that case the push is disabled naturally.
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - uses: Boostport/setup-cloudflare-warp@v1
        with:
          organization: ${{ secrets.CLOUDFLARE_ORGANIZATION }}
          auth_client_id: ${{ secrets.CLOUDFLARE_AUTH_CLIENT_ID }}
          auth_client_secret: ${{ secrets.CLOUDFLARE_AUTH_CLIENT_SECRET }}
      - name: Restore network.env
        run: |
          IFS=',' read -ra ADDR <<< "${{ secrets.NETWORK_ENVS }}"
          for kv in "${ADDR[@]}"; do
            key="${kv%%=*}"
            val="${kv#*=}"
            echo "export $key=\"$val\""
          done > ./scripts/network.env
      - name: Run integration tests
        run: |
          make test-connect-e2e-nix
      - name: 'Tar debug files'
        if: failure()
        run: tar cfz debug_files.tar.gz -C "${TMPDIR-/tmp}/pytest-of-runner" .
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: debug-files
          path: debug_files.tar.gz
          if-no-files-found: ignore
